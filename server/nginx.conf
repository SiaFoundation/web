server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name beta.sia.tech;

  # Redirect old /docs routes to api subdomain
  location /docs {
    rewrite ^/docs(.*)$ https://api.sia.tech$1 permanent;
  }

  # Redirect old paths
  location = /whitepaper.pdf {
    return 301 /sia.pdf;
  }
  location = /apps {
    return 301 /get-started;
  }
  location = /download {
    return 301 /get-started;
  }
  location = /downloads {
    return 301 /get-started;
  }
  location = /jobs {
    return 301 https://siafoundation.homerun.co;
  }
  location = /blog {
    return 301 https://blog.sia.tech;
  }
  location = /img/svg/sia-wordmark.svg {
    return 301 /assets/svg/sia-wordmark.svg;
  }
  location = /img/svg/sia-green-logo.svg {
    return 301 /assets/svg/sia-green-logo.svg;
  }
  location = /logo.png {
    return 301 /assets/logo.png;
  }
  # Redirect old news paths
  location = /funding2016 {
    return 301 /newsroom/2016-funding;
  }
  location = /2017grant {
    return 301 /newsroom/2017-grant;
  }
  location = /funding2019 {
    return 301 /newsroom/2019-funding;
  }
  location = /settlement2019 {
    return 301 /newsroom/2019-settlement;
  }
  location = /funding2020 {
    return 301 /newsroom/2020-funding;
  }
  location = /skydb2020 {
    return 301 /newsroom/2020-skydb;
  }
  location = /skynet2020 {
    return 301 /newsroom/2020-skynet;
  }
  location = /siafoundation {
    return 301 /newsroom/2021-foundation;
  }

  location /releases {
    proxy_pass http://localhost:3002;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location /transparency {
    proxy_pass http://localhost:3002;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  location / {
    proxy_pass http://localhost:3001;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  ssl_certificate /etc/letsencrypt/live/beta.sia.tech/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/beta.sia.tech/privkey.pem;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name api.sia.tech;

  location / {
    proxy_pass http://localhost:3002;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  ssl_certificate /etc/letsencrypt/live/api.sia.tech/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/api.sia.tech/privkey.pem;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name design.sia.tech;

  location / {
    proxy_pass http://localhost:3004;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

  ssl_certificate /etc/letsencrypt/live/design.sia.tech/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/design.sia.tech/privkey.pem;
}

server {
  listen 80;
  listen [::]:80;

  server_name beta.sia.tech;

  return 302 https://$server_name$request_uri;
}

server {
  listen 80;
  listen [::]:80;

  server_name api.sia.tech;

  return 302 https://$server_name$request_uri;
}

server {
  listen 80;
  listen [::]:80;

  server_name design.sia.tech;

  return 302 https://$server_name$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;

  server_name docs.sia.tech;

  return 302 https://support.sia.tech$request_uri;

  ssl_certificate /etc/letsencrypt/live/docs.sia.tech/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/docs.sia.tech/privkey.pem;
}

server {
  listen 80;
  listen [::]:80;

  server_name docs.sia.tech;

  return 302 https://support.sia.tech$request_uri;
}
