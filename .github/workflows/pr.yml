name: PR

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

# cancel previous runs when the PR is updated
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    steps:
      - name: Checkout all commits
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Full setup required since building the JS SDK requires Go
      - name: Setup
        uses: ./.github/actions/setup-all
        with:
          node_version: 20.10.0
          go_version: 1.23.0
      - name: Commit lint
        shell: bash
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }}
      - name: Lint TypeScript
        shell: bash
        run: npx nx affected --target=lint --parallel=5
      # The SDK is referenced via dist in the tsconfig.base.json
      # because the next executor does not actually support
      # buildLibsFromSource=false
      # With this configuration NX does not build the SDK as expected
      # when it is an app dependency
      - name: Force build SDK
        shell: bash
        run: npx nx run sdk:build
      - name: Test TypeScript
        shell: bash
        run: npx nx affected --target=test --parallel=5
      - name: Build
        shell: bash
        run: npx nx affected --target=build --configuration=production --parallel=5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
      - name: Export
        shell: bash
        # issue with parallelism
        run: npx nx affected --target=build --configuration=export --parallel=5
  test-e2e-renterd:
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    steps:
      - name: Checkout all commits
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Full setup required since building the JS SDK requires Go
      - name: Setup
        uses: ./.github/actions/setup-all
        with:
          node_version: 20.10.0
          go_version: 1.23.0
      - name: Check if renterd-e2e is affected
        run: |
          AFFECTED=$(npx nx print-affected --target=e2e --projects=renterd-e2e --select=projects)
          if [[ -z "$AFFECTED" ]]; then
            echo "renterd-e2e is unaffected. Exiting."
            exit 0
          fi
      # The SDK is referenced via dist in the tsconfig.base.json
      # because the next executor does not actually support
      # buildLibsFromSource=false
      # With this configuration NX does not build the SDK as expected
      # when it is an app dependency
      - name: Force build SDK
        shell: bash
        run: npx nx run sdk:build
      - name: Install playwright deps for e2e
        shell: bash
        run: npx playwright install-deps
      - name: Test e2e
        shell: bash
        run: npx nx run renterd-e2e:e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: apps/renterd-e2e/output/
          retention-days: 1
  merge-reports-renterd-e2e:
    # Merge reports after playwright-tests, even if some shards have failed.
    if: ${{ !cancelled() }}
    needs: [test-e2e-renterd]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: apps/renterd-e2e/output/blob-report-*
          merge-multiple: true
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: renterd-e2e-html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 2
  test-e2e-hostd:
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    steps:
      - name: Checkout all commits
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Full setup required since building the JS SDK requires Go
      - name: Setup
        uses: ./.github/actions/setup-all
        with:
          node_version: 20.10.0
          go_version: 1.23.0
      - name: Check if hostd-e2e is affected
        run: |
          AFFECTED=$(npx nx print-affected --target=e2e --projects=hostd-e2e --select=projects)
          if [[ -z "$AFFECTED" ]]; then
            echo "hostd-e2e is unaffected. Exiting."
            exit 0
          fi
      # The SDK is referenced via dist in the tsconfig.base.json
      # because the next executor does not actually support
      # buildLibsFromSource=false
      # With this configuration NX does not build the SDK as expected
      # when it is an app dependency
      - name: Force build SDK
        shell: bash
        run: npx nx run sdk:build
      - name: Install playwright deps for e2e
        shell: bash
        run: npx playwright install-deps
      - name: Test e2e
        shell: bash
        run: npx nx run hostd-e2e:e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: apps/hostd-e2e/output/
          retention-days: 1
  merge-reports-hostd-e2e:
    # Merge reports after playwright-tests, even if some shards have failed
    if: ${{ !cancelled() }}
    needs: [test-e2e-hostd]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: apps/hostd-e2e/output/blob-report-*
          merge-multiple: true
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: hostd-e2e-html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 2
  test-e2e-walletd:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    steps:
      - name: Checkout all commits
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Full setup required since building the JS SDK requires Go
      - name: Setup
        uses: ./.github/actions/setup-all
        with:
          node_version: 20.10.0
          go_version: 1.23.0
      - name: Check if walletd-e2e is affected
        run: |
          AFFECTED=$(npx nx print-affected --target=e2e --projects=walletd-e2e --select=projects)
          if [[ -z "$AFFECTED" ]]; then
            echo "walletd-e2e is unaffected. Exiting."
            exit 0
          fi
      # The SDK is referenced via dist in the tsconfig.base.json
      # because the next executor does not actually support
      # buildLibsFromSource=false
      # With this configuration NX does not build the SDK as expected
      # when it is an app dependency
      - name: Force build SDK
        shell: bash
        run: npx nx run sdk:build
      - name: Install playwright deps for e2e
        shell: bash
        run: npx playwright install-deps
      - name: Test e2e
        shell: bash
        run: npx nx run walletd-e2e:e2e --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Upload blob report to GitHub Actions Artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: apps/walletd-e2e/output/
          retention-days: 1
  merge-reports-walletd-e2e:
    # Merge reports after playwright-tests, even if some shards have failed
    if: ${{ !cancelled() }}
    needs: [test-e2e-walletd]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: apps/walletd-e2e/output/blob-report-*
          merge-multiple: true
      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports
      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: walletd-e2e-html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 2
  test-go:
    # Run matrix since Go modules are used across all platforms
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        module: [./renterd, ./hostd, ./walletd]
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    steps:
      - name: Checkout all commits
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Git
        uses: ./.github/actions/setup-git
      # Only Go setup is necessary for running Go tests
      - name: Setup Go
        uses: ./.github/actions/setup-go
        with:
          go_version: 1.23.0
      - name: Lint Go
        uses: golangci/golangci-lint-action@v4
        with:
          working-directory: ${{ matrix.module }}
          skip-cache: true
      - name: Test Go
        uses: n8maninger/action-golang-test@v2
        with:
          args: '-race'
          working-directory: ${{ matrix.module }}
          package: ./...
